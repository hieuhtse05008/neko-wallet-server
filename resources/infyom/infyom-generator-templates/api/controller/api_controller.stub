<?php

namespace $NAMESPACE_API_CONTROLLER$;

use $NAMESPACE_API_REQUEST$\Create$MODEL_NAME$APIRequest;
use $NAMESPACE_API_REQUEST$\Update$MODEL_NAME$APIRequest;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use $NAMESPACE_REPOSITORY$\$MODEL_NAME$Repository;
use Illuminate\Http\Request;
use $NAMESPACE_APP$\Http\Controllers\API\APIController;
use Response;

$DOC_CONTROLLER$
class $MODEL_NAME$APIController extends APIController
{
    /** @var  $MODEL_NAME$Repository */
    private $$MODEL_NAME_CAMEL$Repository;

    public function __construct($MODEL_NAME$Repository $$MODEL_NAME_CAMEL$Repo)
    {
        parent::__construct();
        $this->$MODEL_NAME_CAMEL$Repository = $$MODEL_NAME_CAMEL$Repo;
    }

    $DOC_INDEX$
    public function index(Request $request)
    {
        $filter = [];
        $limit = $request->limit;
        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->list($limit, $filter);

        return $this->respondSuccess([
            "$MODEL_NAME_PLURAL_SNAKE$" => $$MODEL_NAME_PLURAL_CAMEL$
        ]);
    }

    $DOC_STORE$
    public function store(Create$MODEL_NAME$APIRequest $request)
    {
        $input = $request->validated();

        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->create($input);

        return $this->respondSuccess([
            "$MODEL_NAME_SNAKE$" => $$MODEL_NAME_CAMEL$
        ]);
    }

    $DOC_SHOW$
    public function show($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->find($$MODEL_NAME_CAMEL$->id);

        return $this->respondSuccess([
            "$MODEL_NAME_SNAKE$" => $$MODEL_NAME_CAMEL$
        ]);
    }

    $DOC_UPDATE$
    public function update($MODEL_NAME$ $$MODEL_NAME_CAMEL$, Update$MODEL_NAME$APIRequest $request)
    {
        $input = $request->validated();

        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->update($input, $$MODEL_NAME_CAMEL$->id);

        return $this->respondSuccess([
            "$MODEL_NAME_SNAKE$" => $$MODEL_NAME_CAMEL$
        ]);
    }

    $DOC_DESTROY$
    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->delete();

        return $this->respondSuccessWithMessage('$MODEL_NAME_HUMAN$ deleted successfully');
    }
}
